#pragma once

#include "../../configuration.h"

#define MCP2515_RXF0SIDH 0x00
#define MCP2515_RXF0SIDL 0x01
#define MCP2515_RXF0EID8 0x02
#define MCP2515_RXF0EID0 0x03
#define MCP2515_RXF1SIDH 0x04
#define MCP2515_RXF1SIDL 0x05
#define MCP2515_RXF1EID8 0x06
#define MCP2515_RXF1EID0 0x07
#define MCP2515_RXF2SIDH 0x08
#define MCP2515_RXF2SIDL 0x09
#define MCP2515_RXF2EID8 0x0A
#define MCP2515_RXF2EID0 0x0B
#define MCP2515_CANSTAT 0x0E
#define MCP2515_CANCTRL 0x0F
#define MCP2515_RXF3SIDH 0x10
#define MCP2515_RXF3SIDL 0x11
#define MCP2515_RXF3EID8 0x12
#define MCP2515_RXF3EID0 0x13
#define MCP2515_RXF4SIDH 0x14
#define MCP2515_RXF4SIDL 0x15
#define MCP2515_RXF4EID8 0x16
#define MCP2515_RXF4EID0 0x17
#define MCP2515_RXF5SIDH 0x18
#define MCP2515_RXF5SIDL 0x19
#define MCP2515_RXF5EID8 0x1A
#define MCP2515_RXF5EID0 0x1B
#define MCP2515_TEC 0x1C
#define MCP2515_REC 0x1D
#define MCP2515_RXM0SIDH 0x20
#define MCP2515_RXM0SIDL 0x21
#define MCP2515_RXM0EID8 0x22
#define MCP2515_RXM0EIDL 0x23
#define MCP2515_RXM1SIDH 0x24
#define MCP2515_RXM1SIDL 0x25
#define MCP2515_RXM1EID8 0x26
#define MCP2515_RXM1EID0 0x27
#define MCP2515_CNF3 0x28
#define MCP2515_CNF2 0x29
#define MCP2515_CNF1 0x2A
#define MCP2515_CANINTE 0x2B
#define MCP2515_CANINTF 0x2C
#define MCP2515_EFLG 0x2D

#define MCP2515_TXB0_BASE 0x30
#define MCP2515_TXB1_BASE 0x40
#define MCP2515_TXB2_BASE 0x50
#define MCP2515_RXB0_BASE 0x60
#define MCP2515_RXB1_BASE 0x70

#define MCP2515_TXBxCTRL_OFFSET 0
#define MCP2515_TXBxSIDH_OFFSET 1
#define MCP2515_TXBxSIDL_OFFSET 2
#define MCP2515_TXBxEID8_OFFSET 3
#define MCP2515_TXBxEID0_OFFSET 4
#define MCP2515_TXBxDLC_OFFSET 5
#define MCP2515_TXBxDATA_BASE_OFFSET 6

#define MCP2515_RXBxCTRL_OFFSET 0
#define MCP2515_RXBxSIDH_OFFSET 1
#define MCP2515_RXBxSIDL_OFFSET 2
#define MCP2515_RXBxEID8_OFFSET 3
#define MCP2515_RXBxEID0_OFFSET 4
#define MCP2515_RXBxDLC_OFFSET 5
#define MCP2515_RXBxDATA_BASE_OFFSET 6

#define MCP2515_MODE_NORMAL 0x00
#define MCP2515_MODE_SLEEP 0x01
#define MCP2515_MODE_LOOPBACK 0x02
#define MCP2515_MODE_LISTEN_ONLY 0x03
#define MCP2515_MODE_CONFIGURATION 0x04

#define MCP2515_TXBnCTRL_MASK_TXREQ 0x08

#define MCP2515_STATUS_MASK_RX0IF 0x01
#define MCP2515_STATUS_MASK_RX1IF 0x02
#define MCP2515_STATUS_MASK_TX0REQ 0x04
#define MCP2515_STATUS_MASK_TX0IF 0x08
#define MCP2515_STATUS_MASK_TX1REQ 0x10
#define MCP2515_STATUS_MASK_TX1IF 0x20
#define MCP2515_STATUS_MASK_TX2REQ 0x40
#define MCP2515_STATUS_MASK_TX2IF 0x80

void mcp2515_init();

void mcp2515_reset();

void mcp2515_change_mode(uint8_t mode);

uint8_t mcp2515_read(uint8_t address);

void mcp2515_write(uint8_t address, uint8_t value);

uint8_t mcp2515_read_status();

void mcp2515_bit_modify(uint8_t address, uint8_t mask, uint8_t value);

uint8_t mcp2515_get_empty_transmit_buffer();
